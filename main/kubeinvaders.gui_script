function init(self)

end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("hello_gui") then
		gui.set_text(gui.get_node("status"), "Running pods: " .. message.pod_running)		

	elseif  message_id == hash("howto") then
		gui.set_text(gui.get_node("howto"), message.howto_message)	

	elseif  message_id == hash("info") then
		gui.set_text(gui.get_node("info"), message.infomessage)	

	elseif  message_id == hash("node_name") then
		spaceship_x = message.spaceship_pos.x
 
		if spaceship_x <= 80 then
			spaceship_x = spaceship_x + 100
		end

		spaceship_y = message.spaceship_pos.y
		node_name_pos = vmath.vector3(spaceship_x, spaceship_y - 50, 0)
		gui.set_text(gui.get_node("node_name"), message.node_name)	
		gui.set_position(gui.get_node("node_name"), node_name_pos)
		k8s_nodes_show = true

	elseif  message_id == hash("reset_node_name") and k8s_nodes_show then
		node_name_pos = gui.get_position(gui.get_node("node_name"))
		print("Reset node name text box")
		if node_name_pos.x > 0 then
			gui.set_text(gui.get_node("node_name"), '')	
			node_name_pos = vmath.vector3(-501, -501, 0)
			print("Reset node_name text node")
			k8s_nodes_show = false
		end
		
	elseif  message_id == hash("pod_log") then
		--gui.set_text(gui.get_node("pod_log"), message.infomessage)	
		if message.infomessage and message.infomessage ~= '' and not kubelinter_read then
			gui.set_text(gui.get_node("pod_log_text"), message.infomessage)	
			gui.set_position(gui.get_node("podlog_box"), vmath.vector3(893, 539, 0))
			--gui.set_position(gui.get_node("pod_log_text"), vmath.vector3(850, 500, 0))
		elseif not kubelinter_read  and message.infomessage then
			gui.set_position(gui.get_node("podlog_box"), vmath.vector3(-893, -739, 0))
			gui.set_text(gui.get_node("pod_log_text"), message.infomessage)	
		end

	elseif  message_id == hash("error1") then
		gui.set_text(gui.get_node("error1"), message.errormessage)

	elseif  message_id == hash("error") then
		gui.set_text(gui.get_node("error"), message.errormessage)

	elseif  message_id == hash("mode") then
		gui.set_text(gui.get_node("mode"), message.mode)

	elseif  message_id == hash("open_kubelinter_box") then
		--gui.set_position(gui.get_node("kubelinter"), message.position)
		gui.set_position(gui.get_node("kubelinter_box"), vmath.vector3(893, 539, 0))

	elseif  message_id == hash("close_kubelinter_box") then
		gui.set_position(gui.get_node("kubelinter_box"), vmath.vector3(-893, -539, 0))
		
	elseif  message_id == hash("set_kubelinter_text") then
		gui.set_text(gui.get_node("kubelinter"), message.kubelintermessage)	

	elseif  message_id == hash("help") then
		gui.set_position(gui.get_node("inputs"), message.position)

	elseif  message_id == hash("quit_help") then
		gui.set_position(gui.get_node("inputs"), message.position)
		
	elseif  message_id == hash("pod_name") then
		if  message.pod_name == false or message.pod_name == nil then
			fake_position = message.position
			fake_position.x = 0
			fake_position.y = 0
			gui.set_text(gui.get_node("pod_name"),'')
			--gui.set_position(gui.get_node("pod_name"), fake_position)
		else
			gui.set_text(gui.get_node("pod_name"), message.pod_name)
			print(message.position_of_pod)
			new_position = message.position
			new_position.y = message.position.y - 25 
			gui.set_position(gui.get_node("pod_name"), new_position)
		end		
	end
end


function on_input(self, action_id, action)

end

function on_reload(self)
	-- Add input-handling code here
	-- Remove this function if not needed
end
